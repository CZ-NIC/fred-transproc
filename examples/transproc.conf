###############################################################################
#                      Transproc Configuration File                           #
###############################################################################
# This is an example of configuration.
#
# Transproc is used to process the transcripts of bank transactions.
#

[general]
# Path of the directory with transcript processors
procdir=/usr/libexec/transproc
# Command to run to process data in the unified XML format - for processor data_type=payments
backend_payments_cmd=python ./dummy_backend.py
# Command to run to process data in the unified XML format - for processor data_type=statement
#   if not specified it defaults to backend_payments_cmd
#   possible placeholders to use in backend_statement_cmd:
#     * {STATEMENT_FILE} - path to (temporary) file with content of the original data from bank
#     * {STATEMENT_FILE_MIMETYPE} - mime type of STATEMENT_FILE
#backend_statement_cmd=
# Maximum of attempts to read output+error stream of the ``backendcmd`` binary
#   (default: 30)
backendcmd_max_read_iterations=30
# Path of the log file
logfile=/var/log/transproc.log
# Logging level as defined in the standard logging module (default: debug)
loglevel=debug

[bank1_http]
# Type of the source of transcripts
type=http
# Type of data (``payments`` or ``statement``)
data_type=payments
# Format of date for the start of loading payments
# Optional, but required for using ``{START_DATE}`` in url
start_date_format=%Y-%m-%d
# Format of date for the end of loading payments
# Optional, but required for using ``{END_DATE}`` in url
end_date_format=%d.%m.%Y
# Date for the end of loading payments (in ISO format - %Y-%m-%d) or ``TODAY`` for current day
# Optional, default is TODAY
end_date=TODAY
# Interval from past to end_date in months
# Optional, but required for using ``{START_DATE}`` in url
interval=3
# URL of http page with data (for dates use ``{START_DATE}`` and ``{END_DATE}``)
url=https://mybank.com/?account=name&pass=pass&from={START_DATE}&to={END_DATE}
# Path of the script to process transcripts (relative to procdir)
processor=proc_ebanka_csv.py
# Encoding of the attachment containing a transcript
input_encoding=cp1250

[bank2_imap]
# Type of the source of transcripts
type=imap
# Type of data (``payments`` or ``statement``)
data_type=statement
# Mimetype of the file containing a statement
data_mimetype=text/xml
# Path of the script to process transcripts (relative to procdir)
processor=proc_csob_xml.py
# IMAP login data
imapuser=myaccount@mymail.com
imappass=pass
imaphost=mail.myimap.com
imapfolder=
imapssl=no
# Part of email to be processed
#     (default: 2, i.e. the 2nd part of a MIME Multipart message)
part=2
# Email filter through the FROM field
fromhead=administrat@mybank.com
# Email filter through the SUBJECT field
subject_filter=pis z

[bank3_csob_ceb]
# Type of the source of transcripts
type=csob_ceb
# Type of data (``payments`` or ``statement``)
data_type=statement
data_mimetype=text/xml
# Path of the script to process transcripts (relative to procdir)
processor=proc_csob_xml.py
# Path to wsdl file (soap api)
wsdl_file=csob_api/ceb/wsdl/CEBBCWS.wsdl
# Path to client certificate
cert_file=csob_api/ceb/cert/csob_api.pem
# Path to client certificate private key
key_file=csob_api/ceb/cert/csob_api_key_np.pem
# CSOB CEB contract number
contract_number=
# Interval in days for time sliding download window <now() - interval; now()>
# Optional, if not set default is 45 (which is also specified as current maximum value)
# (Api documentation and csob implementation is currently (2018-12) at odds - if greater
# then maximal value is used here, no data is returned.)
# interval=
# TEST endpoints
# api_endpoint=https://testceb-bc.csob.cz/cebbc/api
# api_endpoint=http://localhost:10000
